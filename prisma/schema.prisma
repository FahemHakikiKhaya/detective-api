// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

model User {
  id        Int          @id @default(autoincrement())
  username  String
  email     String       @unique
  password  String
  isAdmin   Boolean?     @default(false)
  createdAt DateTime     @default(now()) @map("created_at")
  updatedAt DateTime     @updatedAt @map("updated_at")
  results   UserResult[]

  @@map("users")
}

model UserAnswer {
  id              Int     @id @default(autoincrement())
  symptomId       Int     @map("symptom_id")
  answer          Boolean
  certaintyFactor Float?  @default(0.0)
  userResultId    Int?    @map("user_result_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  symptom    Symptom     @relation(fields: [symptomId], references: [id])
  UserResult UserResult? @relation(fields: [userResultId], references: [id])

  @@map("user_answers")
}

model UserResult {
  id     Int @id @default(autoincrement())
  userId Int @map("user_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  certainties UserResultCertainty[]
  answers     UserAnswer[]

  user User @relation(fields: [userId], references: [id])

  @@map("user_results")
}

model Symptom {
  id               Int               @id @default(autoincrement())
  code             String            @unique
  name             String
  question         String
  createdAt        DateTime          @default(now()) @map("created_at")
  updatedAt        DateTime          @updatedAt @map("updated_at")
  answers          UserAnswer[]
  diagnoseSymptoms DiagnoseSymptom[]

  @@map("symptoms")
}

model Diagnose {
  id          Int                   @id @default(autoincrement())
  name        String
  description String                @default("")
  solution    String
  code        String                @unique
  createdAt   DateTime              @default(now()) @map("created_at")
  updatedAt   DateTime              @updatedAt @map("updated_at")
  symptoms    DiagnoseSymptom[]
  certainties UserResultCertainty[]

  @@map("diagnoses")
}

model DiagnoseSymptom {
  id              Int      @id @default(autoincrement())
  diagnoseId      Int      @map("diagnose_id")
  symptomId       Int      @map("symptom_id")
  certaintyFactor Float    @default(0.0)
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  diagnose Diagnose @relation(fields: [diagnoseId], references: [id])
  symptom  Symptom  @relation(fields: [symptomId], references: [id])

  @@unique([symptomId, diagnoseId])
  @@map("diagnose_symptoms")
}

model UserResultCertainty {
  id           Int      @id @default(autoincrement())
  userResultId Int      @map("user_result_id")
  diagnoseId   Int      @map("diagnose_id")
  certainty    Float
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  userResult UserResult @relation(fields: [userResultId], references: [id])
  diagnose   Diagnose   @relation(fields: [diagnoseId], references: [id])

  @@map("user_results_certainties")
}
